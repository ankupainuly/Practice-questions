class Solution {
public:
    int islandPerimeter(vector<vector<int>>& grid) {
        if(grid.size() == 1 && grid[0].size() == 1 && grid[0][0]==1) return 4;
        if(grid.size() == 1 && grid[0].size() == 1 && grid[0][0]==0) return 0;
        int count=0;
        for(int i=0;i<grid.size();i++) {
            for(int j=0;j<grid[0].size();j++) {
                if(grid[i][j] == 1) {
                    count +=sides(grid,i,j);
                }
                }
        }
        return count;
    }
    
    int sides(vector<vector<int>>& grid,int i,int j) {
        int count=0,r=grid.size(),c=grid[0].size();
        cout<<r<<" "<<c;
        if(isValidCol(j+1,0,c) && grid[i][j+1] == 0) {
            count++;
        }
        else if(j==c-1) {
            count++;
        }
        
        if(isValidCol(j-1,0,c) && grid[i][j-1] == 0) {
            count++;
        }
        else if(j==0) {
            count++;
        }
        
        if(isValidRow(i+1,0,r) && grid[i+1][j] == 0) {
            count++;
        }
        else if(i==r-1) {
            count++;
        }
        
        if(isValidRow(i-1,0,r) && grid[i-1][j] == 0) {
            count++;
        }
        else if(i==0) {
            count++;
        }
        return count;
    }
    
    bool isValidRow(int i,int s,int e){
        return (i<e && i>=s);
    }
    
    bool isValidCol(int j,int s,int e){
        return (j<e && j>=s);
    }
    
};
